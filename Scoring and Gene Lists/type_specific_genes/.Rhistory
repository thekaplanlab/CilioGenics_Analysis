port = 4445L
)
remDr$open()
remDr$navigate("http://www.google.com/")
remDr$getTitle()
remDr$screenshot(display = TRUE)
eukaryotes <- read.csv2("G:\\Drive'ım\\linuxxx\\GETmsa\\GETmsa\\data_creating\\orglist_Data\\eukaryotes_longest.csv")
result <- lapply(1:1500, function(i) {
remDr$navigate(paste0("https://www.ncbi.nlm.nih.gov/genome/browse#!/eukaryotes/", eukaryotes$BioProject.Accession[i]))
Sys.sleep(3)
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
x <- na.omit(x)
info_data <- x[grep("genome_id", x)]
genome_id <- str_extract(info_data, "(?<=genome_id:')\\d+(?=')")
genome_assembly_id <- str_extract(info_data, "(?<=genome_assembly_id:')[^|']+")
organism <- str_extract(info_data, "(?<=\\|)[^']+")
y <<- data.frame(
Organism = organism,
Genome_id = genome_id,
Genome_assembly_id = genome_assembly_id,
stringsAsFactors = FALSE
)
return(y)
})
print(result)
View(result)
result[[85]][["Organism"]]
View(eukaryotes)
xxx <- read.delim("G:\\Drive'ım\\linuxxx\\GETmsa\\GETmsa\\data_creating\\orglist_Data\\prokaryotes.txt")
View(xxx)
yyy <- read.csv2("G:\\Drive'ım\\linuxxx\\GETmsa\\GETmsa\\data_creating\\orglist_Data\\prokaryotes_longest.csv")
View(yyy)
View(yyy)
View(xxx)
View(eukaryotes)
library(RSelenium)
library(RSelenium)
library(rvest)
library(stringr)
remDr <- remoteDriver(
port = 4445L
)
remDr$open()
remDr$navigate("http://www.google.com/")
remDr$getTitle()
remDr$screenshot(display = TRUE)
eukaryotes <- read.csv2("G:\\Drive'ım\\linuxxx\\GETmsa\\GETmsa\\data_creating\\orglist_Data\\eukaryotes_longest.csv")
XXX <- read.delim("G:\\Drive'ım\\linuxxx\\GETmsa\\GETmsa\\data_creating\\orglist_Data\\eukaryotes.txt")
View(XXX)
result <- lapply(1:10, function(i) {
remDr$navigate(paste0("https://www.ncbi.nlm.nih.gov/genome/browse#!/eukaryotes/", eukaryotes$Assembly.Accession[i]))
Sys.sleep(3)
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
x <- na.omit(x)
info_data <- x[grep("genome_id", x)]
genome_id <- str_extract(info_data, "(?<=genome_id:')\\d+(?=')")
genome_assembly_id <- str_extract(info_data, "(?<=genome_assembly_id:')[^|']+")
organism <- str_extract(info_data, "(?<=\\|)[^']+")
y <<- data.frame(
Organism = organism,
Genome_id = genome_id,
Genome_assembly_id = genome_assembly_id,
stringsAsFactors = FALSE
)
return(y)
})
print(result)
View(result)
View(eukaryotes)
View(result)
View(eukaryotes)
View(eukaryotes)
View(eukaryotes)
View(result)
result[[6]][["Organism"]]
result[[6]]
remDr$navigate(paste0("https://www.ncbi.nlm.nih.gov/genome/browse#!/eukaryotes/", eukaryotes$BioProject.Accession[6]))
eukaryotes$BioProject.Accession[6]
eukaryotes[6]
eukaryotes[,6]
eukaryotes[6,]
remDr$open()
remDr$navigate("http://www.google.com/")
remDr$getTitle()
remDr$navigate(paste0("https://www.ncbi.nlm.nih.gov/genome/browse#!/eukaryotes/", eukaryotes$BioProject.Accession[6]))
remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
View(x)
xml_attrs(x[[48]])
remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')[29]
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
x[29]
x[29] %>% html_text()
x[48] %>% html_text()
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
x
x <- na.omit(x)
x
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
x
grep("main.proteins,x")
grep("main.proteins",x)
main.protein_id <- grep("main.proteins",x)
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_text()
main.protein_number
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>%
html_attr('ui-sref') %>% html_text()
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number <- main.protein_number[main.protein_id]
main.protein_number
main.protein_number <- main.protein_number[main.protein_id] %>% html_text2()
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number <- main.protein_number[main.protein_id] %>% html_text2()
max(main.protein_number)
which(main.protein_number == max(main.protein_number))
main.protein_id[which(main.protein_number == max(main.protein_number))]
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
main.protein_id <- grep("main.proteins",x)
main.protein_id
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number <- main.protein_number[main.protein_id] %>% html_text2()
main.protein_number <- c("2,656","57,585","2000.5","200,5")
max(main.protein_number)
main.protein_number <- c("2,656","57,585","2000.5","20000,5")
max(main.protein_number)
as.numeric(main.protein_number)
str_replace_all(main.protein_number,",",".")
main.protein_number <- str_replace_all(main.protein_number,",",".")
max(main.protein_number)
as.numeric(main.protein_number)
main.protein_number <- as.numeric(str_replace_all(main.protein_number,",","."))
max(main.protein_number)
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number <- main.protein_number[main.protein_id] %>% html_text2()
main.protein_number <- as.numeric(str_replace_all(main.protein_number,",","."))
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
main.protein_id <- grep("main.proteins",x)
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number <- main.protein_number[main.protein_id] %>% html_text2()
main.protein_number <- as.numeric(str_replace_all(main.protein_number,",","."))
max.cds <- main.protein_id[which(main.protein_number == max(main.protein_number))]
x <-x[max.cds]
x
info_data <- x[grep("genome_id", x)]
genome_id <- str_extract(info_data, "(?<=genome_id:')\\d+(?=')")
genome_assembly_id <- str_extract(info_data, "(?<=genome_assembly_id:')[^|']+")
organism <- str_extract(info_data, "(?<=\\|)[^']+")
genome_assembly_id
main.protein_number <- main.protein_number[main.protein_id] %>% html_text2()
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
main.protein_id <- grep("main.proteins",x)
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number <- main.protein_number[main.protein_id] %>% html_text2()
main.protein_number <- as.numeric(str_replace_all(main.protein_number,",","."))
main.protein_number <- c(55.69,55.69)
max(main.protein_number)
View(eukaryotes)
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
x
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number
View(main.protein_number)
main.protein_number[23]
main.protein_number[23] %>% html_text()
main.protein_number[23] %>% html_node(a)
main.protein_number[23] %>% html_node('a')
main.protein_number[23] %>% html_node(a)
main.protein_number[23] %>% html_text()
main.protein_number[23] %>% html_text2()
main.protein_number[23] %>% html_attr()
main.protein_number[23] %>% html_attr('a')
main.protein_number[23] %>% html_attr('text')
main.protein_number[23] %>% html_attr('title')
main.protein_number[23] %>% html_attr('a')
main.protein_number[23] %>% html_attr('name')
main.protein_number[23] %>% html_attr('href')
main.protein_number[23] %>% html_nodes('a')
main.protein_number[23] %>% html_nodes("a")
remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_text()
main.protein_number <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_number[24]
main.protein_number[24] %>% html_text()
main.protein_number[24] %>% html_attr('title')
main.protein_number %>% html_attr('title')
main.strain.id <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
which(main.strain.id %>% html_attr('title') == "Link to Genomes")
main.strain.id[17]
main.strain.id[18]
main.strain.id[17] %>% html_text()
main.strain.id[18] %>% html_text()
which(main.strain.id %>% html_attr('title') == "Link to Genome")
main.strain.id[23] %>% html_text()
main.strain.id[24] %>% html_text()
main.strain.id[32] %>% html_text()
main.strain.id[33] %>% html_text()
eukaryotes$BioProject.Accession[6]
main.starin.id <- which(main.strain.id %>% html_attr('analytics-label') == "NCBI Assembly")
main.starin.id
main.strain.id <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.strain.id %>% html_attr('analytics-label') == "NCBI Assembly"
main.starin.id <- which(main.strain.id %>% html_attr('analytics-label') == "NCBI Assembly")
main.starin.id
main.starin.id
main.strain.id
View(main.strain.id)
which(main.strain.id %>% html_attr('analytics-label') == "NCBI Assembly")
main.strain.id <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
which(main.strain.id %>% html_attr('analytics-label') == "NCBI Assembly")
main.starin.id[27] %>% html_text()
main.strain.id[27] %>% html_text()
main.strain.id[36] %>% html_text()
main.strain.id <- main.strain.id[which(main.strain.id %>% html_attr('analytics-label') == "NCBI Assembly")] %>% html_text()
main.starin.id
main.strain.id
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
page.a_attr <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.strain.id <- which(main.strain.id %>% html_attr('analytics-label') == "NCBI Assembly")
main.strain.id <- which(page.a_attr %>% html_attr('analytics-label') == "NCBI Assembly")
main.starin.id
main.strain.name <- main.strain.id[main.strain.id] %>% html_text()
main.strain.name <- page.a_attr[main.strain.id] %>% html_text()
main.strain.name
rm(main.strain.name)
rm(main.starin.id)
main.strain.name <- which(main.strain.name %in% eukaryotes$Assembly.Accession[6])
main.strain.name <- page.a_attr[main.strain.id] %>% html_text()
main.strain.name <- which(main.strain.name %in% eukaryotes$Assembly.Accession[6])
main.strain.name
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
page.a_attr <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
main.protein_id <- grep("main.proteins",x)
main.protein_number <- page.a_attr[main.protein_id] %>% html_text2()
main.protein_number <- as.numeric(str_replace_all(main.protein_number,",","."))
max.cds <- main.protein_id[which(main.protein_number == max(main.protein_number))]
x <-x[max.cds]
x
info_data <- x[grep("genome_id", x)]
genome_id <- str_extract(info_data, "(?<=genome_id:')\\d+(?=')")
genome_assembly_id <- str_extract(info_data, "(?<=genome_assembly_id:')[^|']+")
organism <- str_extract(info_data, "(?<=\\|)[^']+")
y <<- data.frame(
Organism = organism,
Genome_id = genome_id,
Genome_assembly_id = genome_assembly_id,
stringsAsFactors = FALSE
)
y
result <- lapply(1:10, function(i) {
remDr$navigate(paste0("https://www.ncbi.nlm.nih.gov/genome/browse#!/eukaryotes/", eukaryotes$BioProject.Accession[i]))
Sys.sleep(3)
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
page.a_attr <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
# main.strain.id <- which(page.a_attr %>% html_attr('analytics-label') == "NCBI Assembly")
# main.strain.name <- page.a_attr[main.strain.id] %>% html_text()
# main.strain.name <- which(main.strain.name %in% eukaryotes$Assembly.Accession[6])
main.protein_id <- grep("main.proteins",x)
main.protein_number <- page.a_attr[main.protein_id] %>% html_text2()
main.protein_number <- as.numeric(str_replace_all(main.protein_number,",","."))
max.cds <- main.protein_id[which(main.protein_number == max(main.protein_number))]
x <-x[max.cds]
info_data <- x[grep("genome_id", x)]
genome_id <- str_extract(info_data, "(?<=genome_id:')\\d+(?=')")
genome_assembly_id <- str_extract(info_data, "(?<=genome_assembly_id:')[^|']+")
organism <- str_extract(info_data, "(?<=\\|)[^']+")
y <<- data.frame(
Organism = organism,
Genome_id = genome_id,
Genome_assembly_id = genome_assembly_id,
stringsAsFactors = FALSE
)
return(y)
})
View(result)
View(eukaryotes)
xxxx <- read.delim("G:\\Drive'ım\\linuxxx\\GETmsa\\GETmsa\\data_creating\\orglist_Data\\eukaryotes.txt")
View(xxxx)
View(result)
View(eukaryotes)
info_data <- x[grep("genome_id", x)]
info_data
remDr <- remoteDriver(
port = 4445L
)
remDr$open()
remDr$navigate("http://www.google.com/")
remDr$getTitle()
remDr$screenshot(display = TRUE)
eukaryotes <- read.csv2("G:\\Drive'ım\\linuxxx\\GETmsa\\GETmsa\\data_creating\\orglist_Data\\eukaryotes_longest.csv")
result <- lapply(1:1500, function(i) {
remDr$navigate(paste0("https://www.ncbi.nlm.nih.gov/genome/browse#!/eukaryotes/", eukaryotes$BioProject.Accession[i]))
Sys.sleep(3)
x <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a') %>% html_attr('ui-sref')
page.a_attr <- remDr$getPageSource()[[1]] %>% read_html() %>% html_nodes('a')
# main.strain.id <- which(page.a_attr %>% html_attr('analytics-label') == "NCBI Assembly")
# main.strain.name <- page.a_attr[main.strain.id] %>% html_text()
# main.strain.name <- which(main.strain.name %in% eukaryotes$Assembly.Accession[6])
main.protein_id <- grep("main.proteins",x)
main.protein_number <- page.a_attr[main.protein_id] %>% html_text2()
main.protein_number <- as.numeric(str_replace_all(main.protein_number,",","."))
max.cds <- main.protein_id[which(main.protein_number == max(main.protein_number))]
x <-x[max.cds]
info_data <- x[grep("genome_id", x)]
genome_id <- str_extract(info_data, "(?<=genome_id:')\\d+(?=')")
genome_assembly_id <- str_extract(info_data, "(?<=genome_assembly_id:')[^|']+")
organism <- str_extract(info_data, "(?<=\\|)[^']+")
y <<- data.frame(
Organism = organism,
Genome_id = genome_id,
Genome_assembly_id = genome_assembly_id,
stringsAsFactors = FALSE
)
return(y)
})
library(shiny)
library(VCFshiny)
library(devtools)
devtools::install_github("123xiaochen/VCFshiny")
library(VCFshiny)
load("C:/Users/Hasan Can Demirci/Documents/.RData")
install.packages("bio3d", dependencies=TRUE)
library(bio3d)
example(plot.bio3d)
pdb <- read.pdb("4q21")
View(pdb)
pdb
#### Create values #########
x <- c(1,2,3)
y<- c(4,5,6)
new_data <- data.frame(x,y)
View(new_data)
#### Create values #########
x <- c(1,2,3)
y<- c(4,5,6)
new_data <- data.frame(x,y)
View(new_data)
#### Create values #########
x <- c(1,2,3)
y<- c(4,5,6)
new_data <- data.frame(x,y)
View(new_data)
names(new_data)[1] <- "HCD"
pwd
pw
getwd
pwd
getpwd
getwd
control <- read_xlsx("C:\\Users\\Hasan Can Demirci\\Desktop\\Kitap1.xlsx")
library(ggplot2)
library(ComplexUpset)
library(readxl)
library(dplyr)
library(tibble)
library(writexl)
control <- read_xlsx("C:\\Users\\Hasan Can Demirci\\Desktop\\Kitap1.xlsx")
conrol2 <- control %>%
filter(Habermann >=0)
View(conrol2)
conrol2 <- control %>%
filter(Habermann >0)
View(control)
conrol2 <- control %>%
filter(Habermann>0)
control$Habermann <- as.numeric(control$Habermann)
class(control$Habermann)
conrol2 <- control %>%
filter(Habermann>=0)
View(conrol2)
conrol2 <- control %>%
filter(Habermann>=0.5)
View(conrol2)
conrol2 <- control %>%
filter(Habermann>=0.3)
library(readxl)
library(dplyr)
library(stringr)
specific_genes <- read.csv2("all_genes_scores.csv")
setwd("C:\\Users\\Hasan Can Demirci\\Desktop\\CilioGenics Revision\\type_specific_genes")
specific_genes <- read.csv2("all_genes_scores.csv")
all <- read.csv2("all_genes_scores.csv")
View(all)
motilGenes <- all[c(1,3,4,5,6,8)]
View(motilGenes)
colnames(specific_geness)
m_filtered_data <- motilGenes %>%
filter(
Reyfman >=0,
Carraro >=0,
Habermann >=0,
Murthy >=0,
Trachea >=0)
View(m_filtered_data)
m_filtered_data$Score <- 0
for (i in 1:nrow(m_filtered_data)) {
if (all(!is.na(m_filtered_data[i, c("Reyfman", "Carraro", "Habermann", "Murthy", "Trachea")]))) {
m_filtered_data$Score[i] <- 1
} else {
m_filtered_data$Score[i] <- sum(!is.na(m_filtered_data[i, c("Reyfman", "Carraro", "Habermann", "Murthy", "Trachea")])) * 0.2
}
}
View(m_filtered_data)
setwd("C:\\Users\\Hasan Can Demirci\\Desktop\\CilioGenics Revision\\type_specific_genes")
all <- read.csv2("all_genes_scores.csv")
motilGenes <- all[c(1,3,4,5,6,8)]
m_filtered_data <- motilGenes %>%
filter(
Reyfman >=0,
Carraro >=0,
Habermann >=0,
Murthy >=0,
Trachea >=0)
View(m_filtered_data)
write.csv2(m_filtered_data, "motile_genes.csv")
Cao <- read_xlsx("Cao(2017).xlsx")
View(Cao)
Cengen <- read.csv2("cengen_all_scores_human.csv")
View(Cengen)
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
View(Cengen)
Cengen <- Cengen$human_symbol
Cengen <- as.data.frame(Cengen$human_symbol)
Cengen <- data.frame(Cengen$human_symbol)
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
Cengen <- as.data.frame(Cengen$human_symbol)
View(Cengen)
Cengen <- na.drop(Cengen)
library(readxl)
library(dplyr)
library(stringr)
Cengen <- na.omit(Cengen)
View(Cengen)
Cengen <- na.omit(Cengen$`Cengen$human_symbol`)
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
View(Cengen)
Cengen <- Cengen %>%
select(12) %>%
filter(human_symbol !== NA)
View(m_filtered_data)
Cengen <- Cengen %>%
select(12) %>%
filter(human_symbol != is.na(human_symbol) | human_symbol != "")
View(Cengen)
Cengen <- Cengen %>%
select(12)
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
Cengen <- Cengen %>%
select(12)
View(Cao)
View(all)
View(Cao)
Cao <- unique(Cao)
Cengen - unique(Cengen)
View(Cao)
class(Cengen)
Cengen - unique(Cengen$human_symbol)
Cengen <- na.omit(Cengen$human_symbol)
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
Cengen <- Cengen %>%
select(12)
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
setwd("C:\\Users\\Hasan Can Demirci\\Desktop\\CilioGenics Revision\\all_genes_with_scores")
trachea <- read.csv2("trachea_ciliated_markers.csv",sep = ",")
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
View(Cengen)
Cengen <- Cengen %>%
filter(cluster == "Sensory")
View(Cengen)
all <- read_xlsx("o_all_scores_sidebyside.xlsx")
all$Trachea <- ifelse(all$Gene_name %in% trachea$gene_name,
trachea$score[match(all$Gene_name ,trachea$gene_name)],
NA)
all$CenGen <- ifelse(all$Gene_name %in% Cengen$human_symbol,
Cengen$score[match(all$Gene_name ,Cengen$human_symbol)],
NA)
View(all)
write.csv2(all,"all_genes_scores2.csv")
## new Cengen data ##
write.csv2(Cengen,"cengen_all_scores_human.csv")
setwd("C:\\Users\\Hasan Can Demirci\\Desktop\\CilioGenics Revision\\type_specific_genes")
all <- read.csv2("all_genes_scores.csv")
motilGenes <- all[c(1,3,4,5,6,8)]
m_filtered_data <- motilGenes %>%
filter(
Reyfman >=0,
Carraro >=0,
Habermann >=0,
Murthy >=0,
Trachea >=0)
Cengen <- read.csv2("cengen_all_scores_human.csv", sep = ",")
View(Cengen)
Cengen <- read.csv2("cengen_all_scores_human.csv")
View(Cengen)
Cengen <- Cengen %>%
select(13)
View(Cengen)
Cao <- read_xlsx("Cao(2017).xlsx")
Cao <- unique(Cao)
Cengen <- na.omit(Cengen$human_symbol)
Cengen <- read.csv2("cengen_all_scores_human.csv")
Cengen <- Cengen %>%
select(13)
combined_primary <- read_xlsx("combined_cao_cengen.xlsx")
View(combined_primary)
combined_primary$Cao <- ifelse(combined_primary$genes %in% Cao$`Cao(2017)`,1,0)
combined_primary$CenGen <- ifelse(combined_primary$genes %in% Cengen$human_symbol`,1,0)
combined_primary$CenGen <- ifelse(combined_primary$genes %in% Cengen$human_symbol,1,0)
combined_primary$CenGen <- ifelse(combined_primary$genes %in% Cengen$human_symbol,1,0)
View(combined_primary)
View(combined_primary)
View(Cengen)
